Docker环境安装
安装yum-utils：
yum install -y yum-utils device-mapper-persistent-data lvm2
为yum源添加docker仓库位置：
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
安装docker：
yum install docker -ce
启动docker
systemctl start docker


MySQL安装
下载MySQL5.7的docker镜像： docker pull mysql:5.7
使用如下命令启动MySQL服务：docker run -p 3306:3306 --name mysql \
                -v /mydata/mysql/log:/var/log/mysql \
                -v /mydata/mysql/data:/var/lib/mysql \
                -v /mydata/mysql/conf:/etc/mysql \
                -e MYSQL_ROOT_PASSWORD=root  \
                -d mysql:5.7
参数说明

-p 3306:3306：将容器的3306端口映射到主机的3306端口
-v /mydata/mysql/conf:/etc/mysql：将配置文件夹挂在到主机
-v /mydata/mysql/log:/var/log/mysql：将日志文件夹挂载到主机
-v /mydata/mysql/data:/var/lib/mysql/：将数据文件夹挂载到主机
-e MYSQL_ROOT_PASSWORD=root：初始化root用户的密码

进入运行MySQL的docker容器：docker exec -it mysql /bin/bash
使用MySQL命令打开客户端：mysql -uroot -proot --default-character-set=utf8
创建mall数据库：create database mall character set utf8
安装上传下载插件，并将document/sql/mall.sql上传到Linux服务器上：yum -y install lrzsz
将mall.sql文件拷贝到mysql容器的/目录下：docker cp /mydata/mall.sql mysql:/
将sql文件导入到数据库
use mall;
source /mall.sql;
创建一个reader:123456帐号并修改权限，使得任何ip都能访问：grant all privileges on *.* to 'reader' @'%' identified by '123456';

Redis安装
下载Redis7的docker镜像：docker pull redis:7
使用如下命令启动Redis服务：docker run -p 6379:6379 --name redis \
                -v /mydata/redis/data:/data \
                -d redis:7 redis-server --appendonly yes
进入Redis容器使用redis-cli命令进行连接：docker exec -it redis redis-cli

#Nginx安装
下载Nginx1.22的docker镜像：docker pull nginx:1.22
先运行一次容器（为了拷贝配置文件）：docker run -p 80:80 --name nginx \
                  -v /mydata/nginx/html:/usr/share/nginx/html \
                  -v /mydata/nginx/logs:/var/log/nginx  \
                  -d nginx:1.22

将容器内的配置文件拷贝到指定目录：docker container cp nginx:/etc/nginx /mydata/nginx/
修改文件名称：mv nginx conf
终止并删除容器：
docker stop nginx
docker rm nginx
使用如下命令启动Nginx服务：docker run -p 80:80 --name nginx \
                -v /mydata/nginx/html:/usr/share/nginx/html \
                -v /mydata/nginx/logs:/var/log/nginx  \
                -v /mydata/nginx/conf:/etc/nginx \
                -d nginx:1.22

#RabbitMQ安装
下载rabbitmq3.9-management的docker镜像：docker pull rabbitmq:3.9-management
使用如下命令启动RabbitMQ服务：docker run -p 5672:5672 -p 15672:15672 --name rabbitmq \
                   -d rabbitmq:3.9-management
开启防火墙：firewall-cmd --zone=public --add-port=15672/tcp --permanent
      firewall-cmd --reload


Elasticsearch安装
下载Elasticsearch7.17.3的docker镜像：
docker pull elasticsearch:7.17.3

修改虚拟内存区域大小，否则会因为过小而无法启动:
sysctl -w vm.max_map_count=262144

使用如下命令启动Elasticsearch服务，内存小的服务器可以通过ES_JAVA_OPTS来设置占用内存大小：docker run -p 9200:9200 -p 9300:9300 --name elasticsearch \
                                                         -e "discovery.type=single-node" \
                                                         -e "cluster.name=elasticsearch" \
                                                         -e "ES_JAVA_OPTS=-Xms512m -Xmx1024m" \
                                                         -v /mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins \
                                                         -v /mydata/elasticsearch/data:/usr/share/elasticsearch/data \
                                                         -d elasticsearch:7.17.3

启动时会发现/usr/share/elasticsearch/data目录没有访问权限，只需要修改/mydata/elasticsearch/data目录的权限，再重新启动即可；
chmod 777 /mydata/elasticsearch/data/

安装中文分词器IKAnalyzer，注意下载与Elasticsearch对应的版本，下载地址：https://github.com/medcl/elasticsearch-analysis-ik/releases
下载完成后解压到Elasticsearch的/mydata/elasticsearch/plugins目录下；
重新启动服务：docker restart elasticsearch
开启防火墙：firewall-cmd --zone=public --add-port=9200/tcp --permanent
      firewall-cmd --reload
访问会返回版本信息：http://192.168.3.101:9200
{
  "name": "708f1d885c16",
  "cluster_name": "elasticsearch",
  "cluster_uuid": "mza51wT-QvaZ5R0NmE183g",
  "version": {
    "number": "7.17.3",
    "build_flavor": "default",
    "build_type": "docker",
    "build_hash": "5ad023604c8d7416c9eb6c0eadb62b14e766caff",
    "build_date": "2022-04-19T08:11:19.070913226Z",
    "build_snapshot": false,
    "lucene_version": "8.11.1",
    "minimum_wire_compatibility_version": "6.8.0",
    "minimum_index_compatibility_version": "6.0.0-beta1"
  },
  "tagline": "You Know, for Search"
}
Logstash安装
下载Logstash7.17.3的docker镜像：docker pull logstash:7.17.3

修改Logstash的配置文件logstash.conf中output节点下的Elasticsearch连接地址为es:9200，配置文件地址：https://github.com/macrozheng/mall/blob/master/document/elk/logstash.conf
output {
  elasticsearch {
    hosts => "es:9200"
    index => "mall-%{type}-%{+YYYY.MM.dd}"
  }
}
创建/mydata/logstash目录，并将Logstash的配置文件logstash.conf拷贝到该目录；mkdir /mydata/logstash
使用如下命令启动Logstash服务
docker run --name logstash -p 4560:4560 -p 4561:4561 -p 4562:4562 -p 4563:4563 \
--link elasticsearch:es \
-v /mydata/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf \
-d logstash:7.17.3

进入容器内部，安装json_lines插件。
logstash-plugin install logstash-codec-json_lines

Kibana安装
下载Kibana7.17.3的docker镜像：docker pull kibana:7.17.3

使用如下命令启动Kibana服务：docker run --name kibana -p 5601:5601 \
                 --link elasticsearch:es \
                 -e "elasticsearch.hosts=http://es:9200" \
                 -d kibana:7.17.3
开启防火墙：firewall-cmd --zone=public --add-port=5601/tcp --permanent
      firewall-cmd --reload
访问地址进行测试：http://192.168.3.101:5601

MongoDB安装
下载MongoDB4的docker镜像：docker pull mongo:4
使用docker命令启动：
docker run -p 27017:27017 --name mongo \
-v /mydata/mongo/db:/data/db \
-d mongo:4
